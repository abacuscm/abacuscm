BUGLIST
#######

This file contains a list of BUGS and or nice to havs (wishlist).

* username vs realname
	A user should have both a username and a real-name.  The username can be
	used to log in whilst the real-name can be used for display in standings
	or clarification requests.

	PRIORITY: low

* Java classname handling.
	Need a better heuristic.  Quite probably force the classname to equal
	the JavaCase of the problem code (shortname).

	PRIORITY: medium

* udpmessenger improvements.
	The main problem with udpmessenger is congestion control.  Listed are a
	couple of possibilities to help solve this:

	1.  A queued ticketing system where we only have x number of packets "on
		the wire" and then ack individual fragments.
	2.  Or we could create a "data avail" message and then have the recipient
		request the fragments it needs.  This would still need to be combined
		with some kind of throttling mechanism.  Possibly only allow a
		recipient to request x number of fragments per round?

	The congestion problem can especially be seen where we try to transmit
	large (4MB has been seen before) PeerMessages.

	In all the schemes transmission of fragments related to a specific
	PeerMessage should immediately be terminated once that Message has been
	acked by the receiving server.

	PRIORITY: high

* No problem names to contestants before contest start
	Problem names should not be available to contestants before the start
	of the contest.  This allows them to potentially deduce what a problem
	is about and potentially start coding on solutions before the contest
	actually starts.

	PRIORITY: medium
	
* C/C++ libraries per-problem.
	The configuration of compiling and run-time environment should be more
	flexible.  Linking against libmath is an advantage for some problems
	and having to code functions like exp() or ln() is truly hard.  And
	these in turn are required to efficiently implement sqrt() and the like.

	PRIORITY: medium

* Sort order for standings
	Should be numeric and the leading 0 hack really should not be needed.

	PRIORITY: medium

* runlimit information to judges
	The runlimit output file should be made available to judges.

	PRIORITY: medium

* Client-side execution environment
	Somehow the execution environment should be made available to
	contestants and judges to allow for more thorough testing.  Contestants
	want this to double-check their submissions before final submission and
	judges just want this to confirm the results from the automated judging
	system.

	PRIORITY: medium

* Port to Qt4.
	To allow for Windows ...

	PRIORITY: low

* Request for clarification on submissions page
	Well, when a submission is selected a button to request a clarification
	with regard to that submission is probably a good idea.

	PRIORITY: very low

* Auto-reconnect
	It would be nice if the server could automatically attempt to reconnect.

	PRIORITY: low

* item-based refresh
	In the list boxes it would be very cool to only update single items as
	needed instead of flushing out the entire list and rebuilding it.

	PRIORITY: medium

* No response on marking
	Judges want the ability to add a response (their own comment) to a 
	judge response.

	PRIORITY: very low

* Team name should be displayed.
	On the 'submissions' tab judges should be able to see team-names after
	submissions has been properly marked.

	PRIORITY: low
	
* Select all problems for judge by default
	By default the filter for a judge should be all problems.  Not none.

	PRIORITY: low

* Change colour of tabs to reflect status
	It would be extremely cool to change the colour of tabs depending on
	it's status.  For example, if there is new information in a tab change
	it's colour to blue or something.  As soon as the user switch to that
	tab, change it back.

	PRIORITY: very low

* Colours in listbox's.
	Different lines could be made different colours to reflect the content
	they contain.  For example clarification requests that has not yet been
	answered could be made red, a similar colour scheme could be used for
	submissions and potentially for unread clarifications as well as (at a
	long shot) for standings.

	PRIORITY: very low

* Indication of processing of submissions by judges
	Some indication/warning of judges that has solutions open.  Not critical
	but would make live a lot easier.

	PRIORITY: medium

* Segfault if kill'ed too soon.
	If the server received SIGKILL at the wrong time (during startup) then
	things go really belly up.  Classified as low since this only happened once
	during valgrinding.  Needs to be fixed though.

	PRIORITY: low

* ModuleLoader leaks memory
	These are once-off leaks during load.  Not too worried about these,
	however, as with all things broken it should be fixed.

	PRIORITY: low

* Better balloon notifications
	GUI should not pop up multiple notifications (in general, in fact).
	Possibly also some DB state to indicate whether a balloon has been
	handed out.

	PRIORITY: low
